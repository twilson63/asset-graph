{"version":3,"file":"index.umd.js","sources":["../src/gql.ts","../src/index.ts"],"sourcesContent":["import { path } from 'ramda'\n\n// import.meta?.env?.ARWEAVE ||\n// @ts-ignore\nconst arweaveUrl = 'https://arweave.net'\n\nfunction run(data: { query: string, variables: Record<string, any> }): Promise<any> {\n  return fetch(`${arweaveUrl}/graphql`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data)\n  }).then(res => res.ok ? res.json() : Promise.reject(res))\n    //.then(x => (console.log('result', x.data.errors), x))\n    .then(x => {\n\n      if (x.data.errors) {\n        throw new Error(JSON.stringify(x.data.errors, null, 2))\n      }\n      return x\n    })\n    .then(path(['data', 'transactions']))\n}\n\nexport async function gql(q: { query: string, variables: Record<string, any> }) {\n  let hasNextPage = true;\n  let edges: any[] = []\n  let cursor = \"\"\n\n  while (hasNextPage) {\n    const result = await run({ query: q.query, variables: { ...q.variables, cursor } })\n\n    if (result.edges && result.edges.length) {\n      // @ts-ignore\n      edges = edges.concat(result.edges)\n      cursor = result.edges[result.edges.length - 1].cursor\n    }\n    hasNextPage = result.pageInfo.hasNextPage\n  }\n\n  return edges\n}\n","import { gql } from './gql'\nimport { append, compose, prop, head, find, propEq, join, pluck, filter, reduce, sortBy, reject, map } from 'ramda'\nimport { AtomicAssetType } from './faces'\n\nexport default async function (id: string) {\n  return get(id)\n    .then(prop('groupId'))\n    // @ts-ignore\n    .then(getItemsByGroupId)\n    .then(buildGraph)\n}\n\nfunction get(id: string) {\n  return buildQuery(id)\n    .then(gql)\n    .then(compose(prop('node'), head))\n    .then(toAssetItem)\n}\n\nfunction buildQuery(id: string) {\n  return Promise.resolve({\n    query: `query ($ids: [ID!], $cursor: String) {\n      transactions(first: 1, after: $cursor, \n        ids: $ids) {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }`,\n    variables: {\n      ids: [id]\n    }\n  })\n}\n\nfunction toAssetItem(node: any) {\n  // console.log('node: ', node)\n  const getTag = compose(prop('value'), n => find(propEq('name', n), node.tags))\n  const published = getTag('Published') ? Number(getTag('Published')) : Date.now()\n  // @ts-ignore\n  const topics = join(', ', pluck('value', filter(t => /^Topic:/.test(t.name), node.tags)))\n  return {\n    id: node.id,\n    type: getTag('Type'),\n    title: getTag('Title'),\n    description: getTag('Description'),\n    metaId: getTag('META'),\n    groupId: getTag('Group-Id'),\n    forks: getTag('Forks'),\n    published,\n    stamps: 0,\n    topics\n  }\n}\n\nfunction buildGraph(items: AtomicAssetType[]) {\n  function traverseGraph(children: Record<string, any>[], node: AtomicAssetType) {\n    if (children && children.length > 0) {\n      children.forEach((g: Record<string, any>) => {\n        if (g.id === node.forks) {\n          g.children = append({\n            id: node.id,\n            group: node.groupId,\n            node: node,\n            children: []\n          }, g.children)\n        } else {\n          g.children = traverseGraph(g.children, node)\n        }\n      })\n      return children\n    } else {\n      return []\n    }\n  }\n\n  function createEdge(graph: Record<string, any>, node: AtomicAssetType) {\n    if (node.forks === '') {\n      graph.id = node.id,\n        graph.group = node.groupId,\n        graph.node = node\n      graph.children = []\n    } else {\n      if (graph.id === node.forks) {\n        graph.children = append({\n          id: node.id,\n          group: node.groupId,\n          node: node,\n          children: []\n        }, graph.children)\n      } else {\n        graph.children = traverseGraph(graph.children, node)\n      }\n    }\n    return graph\n  }\n  // @ts-ignore\n  return compose(\n    reduce(createEdge, {}),\n    sortBy(prop('published')),\n    reject(propEq('forks', undefined))\n  )(items)\n}\n\nfunction getItemsByGroupId(groupId: string) {\n  // get assetItems not data\n  const query = `query ($groupIds: [String!]!, $cursor: String) {\n      transactions(first: 100, after: $cursor, tags: [\n        { name: \"Group-Id\", values: $groupIds }\n       ]) {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id \n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }`\n\n  return gql({\n    query,\n    variables: { groupIds: [groupId] }\n  }).then(map(compose(\n    toAssetItem,\n    prop('node')\n  )))\n}"],"names":["_Pact","prototype","then","onFulfilled","onRejected","result","state","this","s","callback","v","e","_settle","o","_this","value","gql","q","hasNextPage","edges","cursor","_temp","_for","run","data","query","variables","_extends","fetch","arweaveUrl","method","headers","body","JSON","stringify","res","ok","json","Promise","reject","x","errors","Error","path","length","concat","pageInfo","resolve","toAssetItem","node","getTag","compose","prop","n","find","propEq","tags","published","Number","Date","now","topics","join","pluck","filter","t","test","name","id","type","title","description","metaId","groupId","forks","stamps","buildGraph","items","traverseGraph","children","forEach","g","append","group","reduce","graph","sortBy","undefined","getItemsByGroupId","groupIds","map","get","ids","buildQuery","head"],"mappings":"krBAE+B,IAAAA,eAAA,WAClB,SAAAA,IAAA,QACPA,EAAAC,UAAaC,KAAA,SAAAC,EAAqBC,GAE/B,IAA2DC,EAAA,IAAAL,EAClEM,EAAYC,KAAIC,EACd,GAAAF,EAAA,CACA,IAASG,EAAgB,EAAAH,EAAAH,IACzB,GAAAM,EAAU,OAE6CJ,EAAA,EAAAI,EAAAF,KAAAG,GAInD,OAHCC,GAEHC,EAAKP,MACH,CACD,QACD,CACF,WAEH,CAmBA,OAjBDE,KAAOM,EAAA,SAAeC,OAEpB,IAAmBC,EAAED,EAAAJ,EACR,EAATI,EAAMN,EAEVI,MAAoBT,EAAAA,EAAAY,GAAAA,GACZX,IAEFC,EAAY,EAAAD,EAAWW,MAEpBV,MAIR,CAFE,MAAAM,GACDC,EAAAP,IAAoBM,EACrB,CAED,OArC6B,8CAqB/B,IAAyBK,EAAA,SAACC,GAAoD,IAC5E,IAAIC,GAAc,EACTC,EAAU,GACfC,EAAS,GAAEC,8iBAAAC,CAAA,WAAA,QAERJ,CAAW,EAAA,EAAA,WACKK,OAAAA,QAAAA,SAvBZC,EAuBgB,CAAEC,MAAOR,EAAEQ,MAAOC,UAASC,EAAA,CAAA,EAAOV,EAAES,UAAWN,CAAAA,OAAAA,KAtBnEQ,MAASC,EAAsB,WAAA,CACpCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUV,KACpBtB,KAAK,SAAAiC,GAAOA,OAAAA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAOJ,EAAI,GAErDjC,KAAK,SAAAsC,GAEJ,GAAIA,EAAEhB,KAAKiB,OACT,MAAM,IAASC,MAACT,KAAKC,UAAUM,EAAEhB,KAAKiB,OAAQ,KAAM,IAEtD,OACFD,CAAA,GACCtC,KAAKyC,EAAAA,KAAK,CAAC,OAAQ,oBAS+DzC,KAAA,SAA7EG,GAEFA,EAAOc,OAASd,EAAOc,MAAMyB,SAE/BzB,EAAQA,EAAM0B,OAAOxC,EAAOc,OAC5BC,EAASf,EAAOc,MAAMd,EAAOc,MAAMyB,OAAS,GAAGxB,QAEjDF,EAAcb,EAAOyC,SAAS5B,WAAW,GA9B7C,IAAaM,CA+BV,GAED,OAAAc,QAAAS,QAAA1B,GAAAA,EAAAnB,KAAAmB,EAAAnB,KAAA,WAAA,OAAYiB,CAAA,GAALA,EACR,CAAA,MAAAR,GAAA,OAAA2B,QAAAC,OAAA5B,EAAA,CAAA,EApCKkB,EAAa,sBCyCnB,SAASmB,EAAYC,GAEnB,IAAYC,EAAGC,EAAOA,QAACC,EAAIA,KAAC,SAAU,SAAAC,GAAKC,OAAAA,EAAAA,KAAKC,EAAMA,OAAC,OAAQF,GAAIJ,EAAKO,KAAK,GAC9DC,EAAGP,EAAO,aAAeQ,OAAOR,EAAO,cAAgBS,KAAKC,MAE/DC,EAAGC,EAAAA,KAAK,KAAMC,EAAAA,MAAM,QAASC,EAAAA,OAAO,SAAAC,GAAC,MAAa,UAACC,KAAKD,EAAEE,KAAK,EAAElB,EAAKO,QAClF,MAAO,CACLY,GAAInB,EAAKmB,GACTC,KAAMnB,EAAO,QACboB,MAAOpB,EAAO,SACdqB,YAAarB,EAAO,eACpBsB,OAAQtB,EAAO,QACfuB,QAASvB,EAAO,YAChBwB,MAAOxB,EAAO,SACdO,UAAAA,EACAkB,OAAQ,EACRd,OAAAA,EAEJ,CAEA,SAAmBe,EAACC,GAClB,SAASC,EAAcC,EAAiC9B,GACtD,OAAI8B,GAAYA,EAASnC,OAAS,GAChCmC,EAASC,QAAQ,SAACC,GAEdA,EAAEF,SADAE,EAAEb,KAAOnB,EAAKyB,MACHQ,EAAMA,OAAC,CAClBd,GAAInB,EAAKmB,GACTe,MAAOlC,EAAKwB,QACZxB,KAAMA,EACN8B,SAAU,IACTE,EAAEF,UAEQD,EAAcG,EAAEF,SAAU9B,EAE3C,GACO8B,GAEA,EAEX,CAuBA,OAAc5B,EAAAA,QACZiC,EAAAA,OAtBF,SAAoBC,EAA4BpC,GAkB9C,MAjBmB,KAAfA,EAAKyB,OACPW,EAAMjB,GAAKnB,EAAKmB,GACdiB,EAAMF,MAAQlC,EAAKwB,QACnBY,EAAMpC,KAAOA,EACfoC,EAAMN,SAAW,IAGfM,EAAMN,SADJM,EAAMjB,KAAOnB,EAAKyB,MACHQ,EAAAA,OAAO,CACtBd,GAAInB,EAAKmB,GACTe,MAAOlC,EAAKwB,QACZxB,KAAMA,EACN8B,SAAU,IACTM,EAAMN,UAEQD,EAAcO,EAAMN,SAAU9B,GAG5CoC,CACT,EAGqB,CAAE,GACrBC,EAAAA,OAAOlC,EAAAA,KAAK,cACZb,EAAAA,OAAOgB,EAAAA,OAAO,aAASgC,IAHXpC,CAIZ0B,EACJ,CAEA,SAA0BW,EAACf,GAsBzB,OAAOzD,EAAI,CACTS,MAHE,yZAIFC,UAAW,CAAE+D,SAAU,CAAChB,MACvBvE,KAAKwF,EAAGA,IAACvC,UACVH,EACAI,EAAAA,KAAK,UAET,QA3I+BgB,SAAAA,GAAU,IACvC,OAAOuB,QAAAA,QAOT,SAAavB,GACX,OAMF,SAAoBA,GAClB,OAAc9B,QAACS,QAAQ,CACrBtB,MAAK,6VAkBLC,UAAW,CACTkE,IAAK,CAACxB,KAGZ,CA9BmByB,CAACzB,GACflE,KAAKc,GACLd,KAAKiD,EAAAA,QAAQC,EAAAA,KAAK,QAAS0C,EAAIA,OAC/B5F,KAAK8C,EACV,CAZS2C,CAAIvB,GACRlE,KAAKkD,EAAIA,KAAC,YAEVlD,KAAKsF,GACLtF,KAAK0E,GACT,CAAA,MAAAjE,GAAA,OAAA2B,QAAAC,OAAA5B,EAAA,CAAA"}